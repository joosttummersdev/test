---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { supabase } from '../../../lib/supabaseClient';

// Get scraper data
const { data: transactions } = await supabase
  .from('scraper_transactions')
  .select(`
    *,
    environment:scraper_environments(
      name,
      type
    )
  `)
  .order('created_at', { ascending: false });

// Format date
const formatDate = (date: string) => {
  return new Date(date).toLocaleDateString('nl-NL', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<AdminLayout title="Scraped Data">
  <div class="space-y-6">
    <div class="sm:flex sm:items-center sm:justify-between">
      <div>
        <h1 class="text-2xl font-bold text-gray-900">Scraped Data</h1>
        <p class="mt-2 text-sm text-gray-700">
          Overview of all scraped transaction data
        </p>
      </div>
    </div>

    <!-- Data Table -->
    <div class="bg-white shadow sm:rounded-lg">
      <div class="px-4 py-5 sm:p-6">
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Environment
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Transaction ID
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Customer
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Product
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Status
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Date
                </th>
                <th scope="col" class="relative px-6 py-3">
                  <span class="sr-only">Actions</span>
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {transactions?.map((transaction) => {
                const data = transaction.transaction_data;
                return (
                  <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {transaction.environment?.name}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {transaction.transaction_id}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="text-sm font-medium text-gray-900">
                        {data.customer?.businessName}
                      </div>
                      <div class="text-sm text-gray-500">
                        {data.customer?.contact?.name}
                      </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="text-sm text-gray-900">{data.product?.name}</div>
                      <div class="text-sm text-gray-500">{data.product?.supplier}</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class={`inline-flex rounded-full px-2 text-xs font-semibold leading-5 ${
                        data.status === 'Nieuw' ? 'bg-green-100 text-green-800' :
                        data.status === 'In behandeling' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-gray-100 text-gray-800'
                      }`}>
                        {data.status}
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {formatDate(transaction.created_at)}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                      <button
                        onclick={`showDetails('${transaction.id}')`}
                        class="text-orange-600 hover:text-orange-900"
                      >
                        Details
                      </button>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Details Modal -->
    <div id="detailsModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
      <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div class="px-6 py-4 border-b">
          <h3 class="text-lg font-medium text-gray-900">Transaction Details</h3>
        </div>
        
        <div id="detailsContent" class="px-6 py-4">
          <!-- Content will be populated by JavaScript -->
        </div>
        
        <div class="px-6 py-4 bg-gray-50 flex justify-end">
          <button
            type="button"
            onclick="hideDetailsModal()"
            class="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  import { supabase } from '../../../lib/supabaseClient';

  const modal = document.getElementById('detailsModal');
  const content = document.getElementById('detailsContent');

  // Format currency
  const formatCurrency = (amount: number) => 
    new Intl.NumberFormat('nl-NL', { 
      style: 'currency', 
      currency: 'EUR' 
    }).format(amount);

  // Show transaction details
  window.showDetails = async function(id: string) {
    try {
      const { data: transaction, error } = await supabase
        .from('scraper_transactions')
        .select(`
          *,
          environment:scraper_environments(
            name,
            type
          )
        `)
        .eq('id', id)
        .single();

      if (error) throw error;

      if (!content) return;

      const data = transaction.transaction_data;
      
      content.innerHTML = `
        <div class="space-y-6">
          <div>
            <h4 class="text-sm font-medium text-gray-900">Product Information</h4>
            <dl class="mt-2 grid grid-cols-1 gap-4 sm:grid-cols-2">
              <div>
                <dt class="text-sm font-medium text-gray-500">Product</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.product.name}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Type</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.product.type}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Supplier</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.product.supplier}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Status</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.status}</dd>
              </div>
            </dl>
          </div>

          <div>
            <h4 class="text-sm font-medium text-gray-900">Customer Information</h4>
            <dl class="mt-2 grid grid-cols-1 gap-4 sm:grid-cols-2">
              <div>
                <dt class="text-sm font-medium text-gray-500">Business Name</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.customer.businessName}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Contact Person</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.customer.contact.name}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Email</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.customer.contact.email}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Phone</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.customer.contact.phone}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Delivery Address</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.customer.deliveryAddress}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Correspondence Address</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.customer.correspondenceAddress}</dd>
              </div>
            </dl>
          </div>

          <div>
            <h4 class="text-sm font-medium text-gray-900">Energy Details</h4>
            <dl class="mt-2 grid grid-cols-1 gap-4 sm:grid-cols-2">
              <div>
                <dt class="text-sm font-medium text-gray-500">Type</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.energy.type}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">EAN Code</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.energy.eanCode}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Usage</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.energy.usage} kWh</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Dual Meter</dt>
                <dd class="mt-1 text-sm text-gray-900">${data.energy.dualMeter ? 'Yes' : 'No'}</dd>
              </div>
            </dl>
          </div>

          <div>
            <h4 class="text-sm font-medium text-gray-900">Financial Details</h4>
            <dl class="mt-2 grid grid-cols-1 gap-4 sm:grid-cols-2">
              <div>
                <dt class="text-sm font-medium text-gray-500">Annual Costs</dt>
                <dd class="mt-1 text-sm text-gray-900">${formatCurrency(data.annualCosts)}</dd>
              </div>
              <div>
                <dt class="text-sm font-medium text-gray-500">Monthly Costs</dt>
                <dd class="mt-1 text-sm text-gray-900">${formatCurrency(data.monthlyCosts)}</dd>
              </div>
            </dl>
          </div>
        </div>
      `;

      modal?.classList.remove('hidden');
    } catch (error) {
      console.error('Error fetching transaction details:', error);
      alert('Error loading transaction details');
    }
  };

  // Hide details modal
  window.hideDetailsModal = function() {
    modal?.classList.add('hidden');
  };

  // Close on outside click
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) window.hideDetailsModal();
  });
</script>