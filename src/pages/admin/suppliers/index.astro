---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { supabaseAdmin } from '../../../lib/supabaseClient';

// Fetch suppliers with admin client to bypass RLS
const { data: suppliers } = await supabaseAdmin
  .from('suppliers')
  .select(`
    *,
    projects (
      id,
      name,
      type,
      description,
      propositions (
        id,
        name,
        commission,
        active
      )
    )
  `)
  .order('name');

const supplierStats = suppliers?.map(supplier => {
  const activePropositions = supplier.projects?.reduce((total, project) => 
    total + (project.propositions?.filter(p => p.active)?.length ?? 0), 0) ?? 0;
  
  const totalProjects = supplier.projects?.length ?? 0;
  
  return {
    ...supplier,
    activePropositions,
    totalProjects
  };
});
---

<AdminLayout title="Leveranciers">
  <div class="space-y-6">
    <div class="flex justify-between items-center">
      <div>
        <h1 class="text-2xl font-bold">Leveranciers</h1>
        <p class="text-gray-600 mt-1">Beheer leveranciers en hun projecten</p>
      </div>
      <button
        id="addSupplierBtn"
        class="bg-orange-600 text-white px-4 py-2 rounded-md hover:bg-orange-700 flex items-center gap-2"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
        </svg>
        Nieuwe Leverancier
      </button>
    </div>

    <!-- Suppliers Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {supplierStats?.map((supplier) => (
        <div class="bg-white rounded-lg shadow-md overflow-hidden">
          <div class="p-6">
            <div class="flex justify-between items-start">
              <h3 class="text-lg font-semibold text-gray-900">{supplier.name}</h3>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800">
                â‚¬{supplier.commission.toFixed(2)}
              </span>
            </div>
            
            {supplier.description && (
              <p class="mt-2 text-sm text-gray-600">{supplier.description}</p>
            )}
            
            <div class="mt-4 grid grid-cols-2 gap-4">
              <div class="text-center">
                <span class="block text-2xl font-semibold text-gray-900">{supplier.totalProjects}</span>
                <span class="block text-sm text-gray-500">Projecten</span>
              </div>
              <div class="text-center">
                <span class="block text-2xl font-semibold text-gray-900">{supplier.activePropositions}</span>
                <span class="block text-sm text-gray-500">Actieve Proposities</span>
              </div>
            </div>
          </div>
          
          <div class="bg-gray-50 px-6 py-4">
            <div class="flex justify-between items-center">
              <a
                href={`/admin/suppliers/${supplier.id}`}
                class="text-sm font-medium text-orange-600 hover:text-orange-500"
              >
                Details bekijken
              </a>
              <button
                onclick={`editSupplier('${supplier.id}')`}
                class="text-sm text-gray-600 hover:text-gray-900"
              >
                Bewerken
              </button>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>

  <!-- Add/Edit Supplier Modal -->
  <div id="supplierModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
      <div class="px-6 py-4 border-b">
        <h3 class="text-lg font-medium text-gray-900" id="modalTitle">Nieuwe Leverancier</h3>
      </div>
      
      <form id="supplierForm" class="px-6 py-4">
        <input type="hidden" id="supplierId" name="supplierId" />
        <div class="space-y-4">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700">Naam</label>
            <input
              type="text"
              id="name"
              name="name"
              required
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500"
            />
          </div>
          
          <div>
            <label for="description" class="block text-sm font-medium text-gray-700">Beschrijving</label>
            <textarea
              id="description"
              name="description"
              rows="3"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500"
            ></textarea>
          </div>
          
          <div>
            <label for="commission" class="block text-sm font-medium text-gray-700">Commissie (%)</label>
            <input
              type="number"
              id="commission"
              name="commission"
              required
              min="0"
              step="0.01"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500"
            />
          </div>
        </div>
      </form>
      
      <div class="px-6 py-4 bg-gray-50 flex justify-end space-x-3 rounded-b-lg">
        <button
          type="button"
          id="cancelBtn"
          class="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500"
        >
          Annuleren
        </button>
        <button
          type="submit"
          form="supplierForm"
          class="px-4 py-2 text-sm font-medium text-white bg-orange-600 hover:bg-orange-700 rounded-md"
        >
          Opslaan
        </button>
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  import { supabase } from '../../../lib/supabaseClient';
  
  const modal = document.getElementById('supplierModal');
  const addBtn = document.getElementById('addSupplierBtn');
  const cancelBtn = document.getElementById('cancelBtn');
  const form = document.getElementById('supplierForm') as HTMLFormElement;
  const modalTitle = document.getElementById('modalTitle');
  const supplierIdInput = document.getElementById('supplierId') as HTMLInputElement;
  
  let editMode = false;
  
  // Show modal
  addBtn?.addEventListener('click', () => {
    editMode = false;
    modalTitle!.textContent = 'Nieuwe Leverancier';
    form?.reset();
    modal?.classList.remove('hidden');
  });
  
  // Hide modal
  function hideModal() {
    modal?.classList.add('hidden');
    form?.reset();
  }
  
  cancelBtn?.addEventListener('click', hideModal);
  
  // Close on outside click
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) hideModal();
  });
  
  // Handle form submission
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    
    try {
      if (editMode) {
        const { error } = await supabase
          .from('suppliers')
          .update({
            name: formData.get('name'),
            description: formData.get('description') || null,
            commission: Number(formData.get('commission'))
          })
          .eq('id', formData.get('supplierId'));
        
        if (error) throw error;
      } else {
        const { error } = await supabase
          .from('suppliers')
          .insert({
            name: formData.get('name'),
            description: formData.get('description') || null,
            commission: Number(formData.get('commission'))
          });
        
        if (error) throw error;
      }
      
      hideModal();
      window.location.reload();
    } catch (error) {
      console.error('Error saving supplier:', error);
      alert('Er is een fout opgetreden bij het opslaan van de leverancier.');
    }
  });
  
  // Edit supplier
  window.editSupplier = async function(id: string) {
    editMode = true;
    modalTitle!.textContent = 'Leverancier Bewerken';
    
    const { data: supplier, error } = await supabase
      .from('suppliers')
      .select('*')
      .eq('id', id)
      .single();
      
    if (error) {
      console.error('Error fetching supplier:', error);
      alert(error.message);
      return;
    }
      
    if (supplier) {
      supplierIdInput.value = supplier.id;
      (form.elements.namedItem('name') as HTMLInputElement).value = supplier.name;
      (form.elements.namedItem('description') as HTMLTextAreaElement).value = supplier.description || '';
      (form.elements.namedItem('commission') as HTMLInputElement).value = supplier.commission.toString();
      
      modal?.classList.remove('hidden');
    }
  };
</script>